<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo博客多台电脑设备同步管理</title>
      <link href="/2019/02/22/Hexo%E5%8D%9A%E5%AE%A2%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5%E7%AE%A1%E7%90%86/"/>
      <url>/2019/02/22/Hexo%E5%8D%9A%E5%AE%A2%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E8%AE%BE%E5%A4%87%E5%90%8C%E6%AD%A5%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客多台电脑设备同步管理"><a href="#Hexo博客多台电脑设备同步管理" class="headerlink" title="Hexo博客多台电脑设备同步管理"></a>Hexo博客多台电脑设备同步管理</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>相关环境</p><ul><li>安装Node.js</li><li>安装git</li><li>安装hexo</li></ul><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><pre><code>hexo生成的静态博客文件都是上传到GitHub上的, 且默认放在master分支上, 而一些相关的配置文件都在本地</code></pre><ul><li>hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支</li></ul><a id="more"></a><ul><li>对username.github.io仓库新建hexo分支</li></ul><p>在Github的username.github.io仓库上新建一个hexo(分支名字可自定义)分支, 在下图箭头位置输入分支名字,回车即可创建成功</p><ul><li>设置默认分支切换到该hexo分支，</li></ul><p>并在该仓库-&gt;Settings-&gt;Branches-&gt;Default branch中将默认分支设为hexo，save保存</p><ul><li><p>配置文件上传导Github该步骤需要在搭建博客的电脑上操作(博客配置文件和主题配置文件所在的电脑上操作)</p></li><li><p>克隆hexo分支(创建博客是的电脑平台)</p><ul><li>将上述新建的hexo分支克隆到本地, 在终端中cd进入该username.github.io文件目录</li><li><p>在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br><span class="line">*hexo</span><br></pre></td></tr></table></figure></li><li><p>如果用Sourcetree软件管理代码的话, 克隆到本地的项目可能没有username.github.io层级, 所有文件都在根目录下, 操作上都不影响, 只需要记住操作要在文件的根目录下即可</p></li></ul></li><li>上传部署文件<ul><li>先将本地博客的部署文件（Hexo目录下的全部文件）全部拷贝进username.github.io文件目录中去</li><li>然后安装要用到的一些插件, 有的可能不需要, 但都安装了貌似没有任何影响</li></ul></li></ul><blockquote><p>npm install hexo-generator-index –save<br>npm install hexo-generator-archive –save<br>npm install hexo-generator-category –save<br>npm install hexo-generator-tag –save<br>npm install hexo-server –save<br>npm install hexo-deployer-git –save<br>npm install hexo-deployer-heroku –save<br>npm install hexo-deployer-rsync –save<br>npm install hexo-deployer-openshift –save<br>npm install <a href="mailto:hexo-renderer-marked@0.2" target="_blank" rel="noopener">hexo-renderer-marked@0.2</a> –save<br>npm install <a href="mailto:hexo-renderer-stylus@0.2" target="_blank" rel="noopener">hexo-renderer-stylus@0.2</a> –save<br>npm install hexo-generator-feed@1 –save<br>npm install hexo-generator-sitemap@1 –save<br>npm install hexo-generator-search –save<br>npm install hexo-generator-searchdb –save复制代码</p></blockquote><ul><li><p>最后就是讲所有的文件都提交到hexo分支</p></li><li><p>提交时考虑以下注意事项</p><ul><li>将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败</li><li>后期需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目录即可</li><li>最后用终端或者管理工具将所有文件提交到hexo分支        master分支和hexo分支各自保存着一个版本，master分支用于保存博客静态资源，提供博客页面供人访问；hexo分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内也不会有任何冲突</li></ul></li></ul><h2 id="同步到其他电脑"><a href="#同步到其他电脑" class="headerlink" title="同步到其他电脑"></a>同步到其他电脑</h2><pre><code>* 将新电脑的生成的ssh key添加到GitHub账户上* 克隆username.github.io库的hexo分支到本地，此时本地git仓库处于hexo分支* 切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录，所以需要install下)</code></pre><blockquote><p>如果node_modules文件没有丢失, 可不执行该操作</p></blockquote><pre><code>* 到这里了就可以开始在自己的电脑上写博客了！* 需要注意的是每次更新博客之后, 都要把相关修改上传到hexo分支* 每次换电脑更新博客的时候, 在修改之前最好也要git pull拉取一下最新的更新</code></pre>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2ray使用教程</title>
      <link href="/2019/02/22/v2ray%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2019/02/22/v2ray%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="缘由："><a href="#缘由：" class="headerlink" title="缘由："></a>缘由：</h1><p>更换服务器为CentOs7系统以后就开始琢磨以前想尝试的V2ray来翻墙了，结果卡在了配置文件这儿，搜了很多资料感觉很复杂，弄明白一点后就搞了个极简教程！</p><h2 id="V2ray-官网服务器端-客户端-安装"><a href="#V2ray-官网服务器端-客户端-安装" class="headerlink" title="V2ray 官网服务器端/客户端 安装"></a>V2ray 官网服务器端/客户端 安装</h2><p>这个按<a href="https://toutyrater.github.io/prep/install.html" target="_blank" rel="noopener">官网步骤</a>就行了，没什么说的；极简步骤如下：</p><ul><li>查看服务器时间<br>对于 V2Ray，它的验证方式包含时间，就算是配置没有任何问题，如果时间不正确，也无法连接 V2Ray 服务器的，服务器会认为你这是不合法的请求。所以系统时间一定要正确，只要保证时间误差在90秒之内就没问题。</li></ul><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">date -R</span><br><span class="line">Sun, 22 Jan 2017 10:10:36 -0500</span><br></pre></td></tr></table></figure><ul><li>校准为东八区(你客户端使用当地时间)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo date --<span class="built_in">set</span>=<span class="string">"2017-01-22 16:16:23"</span></span><br><span class="line">Sun 22 Jan 16:16:23 GMT 2017</span><br></pre></td></tr></table></figure><ul><li>下载安装文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://install.direct/go.sh</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash go.sh</span><br></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start v2ray配置文件</span><br></pre></td></tr></table></figure><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><h4 id="生产一个ID"><a href="#生产一个ID" class="headerlink" title="生产一个ID"></a>生产一个ID</h4><p><a href="https://www.uuidgenerator.net/" target="_blank" rel="noopener">在线UUID生成器/用于生成一个随机id</a></p><p><em>编辑配置文件</em></p><blockquote><p>vi /etc/v2ray/config.json</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">"port": 16823, // 服务器监听端口（类似于SS的端口）</span><br><span class="line">"protocol": "vmess", // 主传入协议</span><br><span class="line">"settings": &#123;</span><br><span class="line">"clients": [&#123;</span><br><span class="line">"id": "63d6668a-b898-4404-B07C-9d804af7f78a", // 用户 ID，客户端与服务器必须相同/填入上述网站生成的ID</span><br><span class="line">"alterId": 64 //客户端与服务器必须相同</span><br><span class="line">&#125;</span><br><span class="line">]&#125;</span><br><span class="line">&#125;],</span><br><span class="line"></span><br><span class="line">"outbounds": [&#123;</span><br><span class="line">"protocol": "freedom", // 主传出协议</span><br><span class="line">"settings": &#123;&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>检查配置是否有问题</em></p><blockquote><p>/usr/bin/v2ray/v2ray -test -config /etc/v2ray/config.json</p></blockquote><p>重新启动</p><blockquote><p>sudo systemctl start v2ray</p></blockquote><h3 id="安卓手机端配置"><a href="#安卓手机端配置" class="headerlink" title="安卓手机端配置"></a>安卓手机端配置</h3><p>软件:<a href="https://play.google.com/store/apps/details?id=com.v2ray.ang&amp;hl=zh" target="_blank" rel="noopener">v2rayNG</a></p><p>手机端填入信息步骤如下:</p><p>1.选Vmess协议</p><p>2.填入信息于服务器配置相同</p><h3 id="Windows配置"><a href="#Windows配置" class="headerlink" title="Windows配置"></a>Windows配置</h3><p><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">软件下载地址</a></p><ul><li><p>直接解压到桌面</p></li><li><p>用记事本打开config.json，并写成一下信息（注意 服务器端口/id/alterId与服务器端的配置相同，否则无法运行）</p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">"port": 1080, // 监听端口</span><br><span class="line">"protoco": "socks", // 入口协议为 SOCKS 5</span><br><span class="line">"sniffing": &#123;</span><br><span class="line"><span class="string">"enabled: true,</span></span><br><span class="line">"destOverride": ["http", "tls"]</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">"settings": &#123;</span><br><span class="line">"auth": "noauth" //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证</span><br><span class="line">&#125;</span><br><span class="line">&#125;],</span><br><span class="line"></span><br><span class="line">"outbounds": [&#123;</span><br><span class="line">"protocol": "vmess", // 出口协议</span><br><span class="line">"settings": &#123;</span><br><span class="line">"vnext": [&#123;</span><br><span class="line">"address": "serveraddr.com", // 服务器地址，请修改为你自己的服务器 IP 或域名</span><br><span class="line">"port": 16823, // 服务器端口</span><br><span class="line">"users": [&#123;</span><br><span class="line">"id": "63d6668a-b898-4404-B07C-9d804af7f78a", // 用户 ID，必须与服务器端配置相同</span><br><span class="line">"alterId": 64 // 此处的值也应当与服务器相同</span><br><span class="line">&#125;]</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>运行v2ray.exe</p></li><li><p>浏览器代理（需代理才能使用/以Firefox为例）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2ray </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
